--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.5) ~  Much Love, Ferib 

]]--

do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;while true do if (v0==4) then v13=select;v14=unpack or table.unpack ;v15=tonumber;v0=5;end if (v0==3) then v10=getfenv or function()return _ENV;end ;v11=setmetatable;v12=pcall;v0=4;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==2) then v7=table.concat;v8=table.insert;v9=math.ldexp;v0=3;end if (5==v0) then v16=nil;v16=function(v25,v26,...)local v27=1;local v28;v25=v5(v4(v25,5),"..",function(v29)if (v2(v29,2)==79) then local v77=0;while true do if (v77==0) then v28=v1(v4(v29,1,1));return "";end end else local v78=0;local v79;while true do if (v78==0) then v79=v3(v1(v29,16));if v28 then local v99=v6(v79,v28);v28=nil;return v99;else return v79;end break;end end end end);local function v30(v31,v32,v33)if v33 then local v80=(v31/((2 -0)^(v32-(455 -(248 + 206)))))%(2^(((v33-1) -(v32-(1 -0))) + (2 -1))) ;return v80-(v80%(2 -1)) ;else local v81=1367 -(551 + 816) ;local v82;while true do if (v81==(0 -0)) then v82=(458 -((511 -(43 + 214)) + 202))^(v32-((2169 -1047) -(117 + 1004))) ;return (((v31%(v82 + v82))>=v82) and ((15 -(12 + 2)) + 0)) or (0 + 0) ;end end end end local function v34()local v47=v2(v25,v27,v27);v27=v27 + 1 ;return v47;end local function v35()local v48,v49=v2(v25,v27,v27 + (3 -1) );v27=v27 + (265 -(53 + 210)) ;return (v49 * (1807 -(858 + 693))) + v48 ;end local function v36()local v50=0;local v51;local v52;local v53;local v54;while true do if (v50==(1 + 0)) then return (v54 * (15237520 + 1539696)) + (v53 * (253236 -187700)) + (v52 * 256) + v51 ;end if (v50==(1691 -(821 + 870))) then v51,v52,v53,v54=v2(v25,v27,v27 + (1481 -((1113 -361) + (1440 -714))) );v27=v27 + 4 ;v50=1 + 0 ;end end end local function v37()local v55=v36();local v56=v36();local v57=1 + 0 ;local v58=(v30(v56,1,52 -32 ) * ((2 + 0)^(63 -31))) + v55 ;local v59=v30(v56,98 -77 ,533 -(102 + 400) );local v60=((v30(v56,55 -23 )==(1369 -(505 + (1097 -(199 + 35))))) and  -(1863 -(985 + 877))) or ((9 -5) -3) ;if (v59==(0 -0)) then if (v58==(0 -(1585 -(745 + 840)))) then return v60 * (0 + (0 -0)) ;else v59=296 -(13 + (767 -485)) ;v57=1301 -(121 + 1180) ;end elseif (v59==((11987 -9079) -861)) then return ((v58==(0 + 0)) and (v60 * ((3 -2)/(0 -(1096 -(1018 + 78)))))) or (v60 * NaN) ;end return v9(v60,v59-(1671 -(388 + 260)) ) * (v57 + (v58/((1 + 1)^(229 -177)))) ;end local function v38(v39)local v61;if  not v39 then v39=v36();if (v39==(1284 -(752 + 532))) then return "";end end v61=v4(v25,v27,(v27 + v39) -(1 + 0) );v27=v27 + v39 ;local v62={};for v75=1, #v61 do v62[v75]=v3(v2(v4(v61,v75,v75)));end return v7(v62);end local v40=v36;local function v41(...)return {...},v13("#",...);end local function v42()local v63=0 -0 ;local v64;local v65;local v66;local v67;local v68;local v69;local v70;while true do if (v63==1) then local v83=0;local v84;while true do if (v83==0) then v84=0 + 0 ;while true do if ((2 -1)~=v84) then else v63=2;break;end if (v84==(0 -0)) then v66=nil;v67=nil;v84=1 -0 ;end end break;end end end if (v63==3) then v70=nil;while true do local v91=1804 -(74 + 1730) ;local v92;while true do if (v91==0) then v92=0;while true do if (v92==(499 -(340 + 159))) then local v116=247 -(180 + 67) ;local v117;while true do if ((0 + 0)~=v116) then else v117=238 -(132 + 106) ;while true do if (v117~=1) then else v92=1;break;end if (v117==0) then local v125=1659 -(519 + 1140) ;while true do if (v125~=1) then else v117=1 + 0 ;break;end if ((383 -(315 + 68))~=v125) then else if (v64==(2 -1)) then local v128=0 + 0 ;while true do if (v128==(3 -1)) then v64=4 -2 ;break;end if (v128~=(1511 -(1252 + 258))) then else for v137=929 -(899 + 29) ,v69 do local v138=0;local v139;local v140;local v141;local v142;while true do if (v138==(348 -(14 + 333))) then v141=nil;v142=nil;v138=2;end if (2~=v138) then else while true do if (v139~=(0 -0)) then else v140=0;v141=nil;v139=3 -2 ;end if (1==v139) then v142=nil;while true do if (v140==1) then if (v141==(2 -1)) then v142=v34()~=(0 + 0) ;elseif (v141==(1181 -(478 + 701))) then v142=v37();elseif (v141==3) then v142=v38();end v70[v137]=v142;break;end if (v140==(1591 -(157 + 1434))) then local v195=1160 -(247 + 913) ;while true do if (v195==1) then v140=1537 -(904 + 632) ;break;end if (v195==0) then v141=v34();v142=nil;v195=2 -1 ;end end end end break;end end break;end if (v138==(0 -0)) then v139=0 -0 ;v140=nil;v138=839 -(255 + 583) ;end end end v68[3 -0 ]=v34();v128=2;end if ((1528 -(462 + 1066))==v128) then local v134=1484 -(889 + 595) ;while true do if (v134==(409 -(341 + 68))) then v69=v36();v70={};v134=1;end if (v134==1) then v128=1 + 0 ;break;end end end end end if (v64~=(58 -(22 + 34))) then else local v129=1217 -(1100 + 117) ;while true do local v131=0;local v132;while true do if (v131==0) then v132=0;while true do if (v132==(0 -0)) then if (v129~=1) then else local v188=0;local v189;while true do if (v188~=(0 -0)) then else v189=0 -0 ;while true do if (v189~=(0 -0)) then else local v209=0;while true do if (v209~=0) then else for v220=938 -(47 + 890) ,v36() do v67[v220]=v36();end return v68;end end end end break;end end end if (v129==(0 -0)) then local v190=0 -0 ;while true do if (v190==0) then for v196=1 + 0 ,v36() do local v197=0;local v198;local v199;while true do if (v197==(2 -1)) then while true do if (v198~=(0 -0)) then else v199=v34();if (v30(v199,750 -(284 + 465) ,1)==0) then local v224=0;local v225;local v226;local v227;local v228;while true do if (v224~=(0 -0)) then else v225=0 -0 ;v226=nil;v224=1;end if ((1907 -(752 + 1154))==v224) then v227=nil;v228=nil;v224=2 -0 ;end if (v224==2) then while true do if (v225~=(0 + 0)) then else local v234=1265 -(756 + 509) ;while true do if (v234==(521 -(244 + 276))) then v225=1;break;end if (v234==0) then local v243=0;while true do if ((0 -0)==v243) then v226=v30(v199,2,3);v227=v30(v199,4,24 -18 );v243=1;end if ((785 -(493 + 291))==v243) then v234=1 -0 ;break;end end end end end if (v225==3) then if (v30(v227,3,3 -0 )==1) then v228[4]=v70[v228[4]];end v65[v196]=v228;break;end if ((1 -0)==v225) then local v236=0 -0 ;while true do if (v236==0) then v228={v35(),v35(),nil,nil};if (v226==(0 -0)) then local v244=1857 -(1632 + 225) ;local v245;while true do if (v244==0) then v245=1982 -(1871 + 111) ;while true do if (v245==0) then v228[3]=v35();v228[4]=v35();break;end end break;end end elseif (v226==(1445 -(932 + 512))) then v228[3]=v36();elseif (v226==2) then v228[2 + 1 ]=v36() -(2^16) ;elseif (v226==3) then local v250=0 -0 ;local v251;while true do if (v250~=0) then else v251=791 -(240 + 551) ;while true do if ((0 + 0)~=v251) then else v228[3]=v36() -((227 -(25 + 200))^16) ;v228[4]=v35();break;end end break;end end end v236=1;end if (v236~=1) then else v225=2;break;end end end if (v225~=2) then else if (v30(v227,1,1)==1) then v228[5 -3 ]=v70[v228[1077 -(657 + 418) ]];end if (v30(v227,7 -5 ,2 + 0 )==1) then v228[3 + 0 ]=v70[v228[2 + 1 ]];end v225=3;end end break;end end end break;end end break;end if (v197~=(0 -0)) then else v198=0;v199=nil;v197=1;end end end for v200=1,v36() do v66[v200-1 ]=v42();end v190=1 + 0 ;end if (v190==(82 -(18 + 63))) then v129=1 -0 ;break;end end end break;end end break;end end end end v125=1 + 0 ;end end end end break;end end end if (v92==1) then if (v64==(0 + 0)) then local v122=0;local v123;local v124;while true do if ((1992 -(1318 + 674))==v122) then v123=207 -(173 + 34) ;v124=nil;v122=1 -0 ;end if (v122~=1) then else while true do if (v123~=(1037 -(842 + 195))) then else v124=0 + 0 ;while true do if (v124~=(633 -(294 + 337))) then else v64=1;break;end if (v124==(945 -(248 + 697))) then local v130=0;while true do if (v130==(1 + 0)) then v124=1;break;end if (v130~=0) then else local v135=0 + 0 ;while true do if (v135~=(1 + 0)) then else v130=1;break;end if (v135==(0 + 0)) then v65={};v66={};v135=1545 -(452 + 1092) ;end end end end end if (1==v124) then v67={};v68={v65,v66,nil,v67};v124=5 -3 ;end end break;end end break;end end end break;end end break;end end end break;end if (v63==(2 -0)) then local v85=1338 -(320 + 1018) ;while true do if (v85==1) then v63=1824 -(1567 + 254) ;break;end if (v85~=(0 -0)) then else v68=nil;v69=nil;v85=1;end end end if (0==v63) then local v86=0 + 0 ;local v87;while true do if (v86~=0) then else v87=1357 -(838 + 519) ;while true do if (v87~=(0 + 0)) then else v64=0;v65=nil;v87=1367 -(654 + 712) ;end if (v87==(92 -(79 + 12))) then v63=1;break;end end break;end end end end end local function v43(v44,v45,v46)local v71=0;local v72;local v73;local v74;while true do if (v71==0) then v72=v44[1];v73=v44[2];v71=1;end if (v71==1) then v74=v44[3];return function(...)local v93=0;local v94;local v95;local v96;local v97;local v98;while true do if (v93==0) then v94=1;v95= -1;v93=1;end if (v93==2) then v98=nil;v98=function()local v100=v72;local v101=v73;local v102=v74;local v103=v41;local v104={};local v105={};local v106={};for v110=0 + (0 -0) ,v97 do if (((3341 -1176)<(6133 -(1381 + (737 -(148 + 223))))) and (v110>=v102)) then v104[v110-v102 ]=v96[v110 + (174 -(11 + 112 + 50)) ];else v106[v110]=v96[v110 + (902 -(326 + 575)) ];end end local v107=(v97-v102) + 1 + 0 ;local v108;local v109;while true do local v111=0 + 0 ;local v112;local v113;while true do if ((v111==(1 + 0)) or (1506<=(149 + 120))) then while true do if ((v112==(0 -0)) or ((1288 + 608)<=(1468 -(428 + 419)))) then v113=0 -0 ;while true do if ((v113==1) or (((711 + 3309) -(622 + 32))==4300)) then if (((362 + 277)<=(4597 -(128 + 954))) and (v109<=8)) then if ((v109<=(10 -7)) or ((4890 -2413)<=(1643 -1049))) then if ((v109<=(1 + 0)) or (2582>(4405 -1646))) then if ((v109>(784 -(175 + 609))) or ((1146 + 1232)<=736)) then local v143=0;local v144;local v145;local v146;local v147;while true do if (((2348 -(742 + 1017))<=(686 + 221)) and (v143==(1320 -(1005 + 314)))) then v146=nil;v147=nil;v143=1 + 1 ;end if ((v143==(0 + 0 + 0)) or ((1913 -810)==2933)) then v144=0 + (0 -0) ;v145=nil;v143=1 -0 ;end if ((2398>(91 + (2682 -(343 + 618)))) and (v143==(1 + 1))) then while true do if (((2773 + 696)>1156) and (v144==(1 -0))) then v147=nil;while true do if ((v145==(1 + 0 + 0 + 0)) or ((5980 -(390 + 764))<=4097)) then v106[v146 + (1 -0) ]=v147;v106[v146]=v147[v108[4 + 0 ]];break;end if (((966 -672)==(671 -377)) and (v145==0)) then local v208=0;while true do if ((3210>=(1969 -(143 + 18))) and (v208==(1647 -(267 + 1379)))) then v145=1899 -(835 + 1063) ;break;end if ((v208==0) or ((15760 -11236)<266)) then local v216=0 + 0 ;while true do if (((6546 -3814)<(6460 -(7599 -4299))) and ((496 -(391 + 105))==v216)) then v146=v108[2 + 0 ];v147=v106[v108[249 -(200 + 46) ]];v216=1 + 0 ;end if ((v216==(1 + 0)) or ((9624 -5117)<=(2821 -(83 + 397)))) then v208=1 -0 ;break;end end end end end end break;end if (((1093 + 3138)>=(740 + 246 + 372)) and ((0 + (1457 -(349 + 1108)))==v144)) then v145=0 + 0 ;v146=nil;v144=1 + 0 ;end end break;end end else v106[v108[2 + 0 ]][v108[(575 + 491) -(989 + 74) ]]=v108[6 -2 ];end elseif ((v109>(550 -(533 + 15))) or ((489 + 1834)>=(964 + 1872))) then local v150=0 + 0 ;local v151;local v152;while true do if (((2452 -1749)<=1351) and (v150==(0 + 0))) then v151=0 + 0 ;v152=nil;v150=(532 + 1002) -(351 + 1182) ;end if (((3694 -2177)<=3958) and ((1 + 0)==v150)) then while true do if ((((2585 -1891) + 406)<=(2751 + 406)) and (v151==(256 -((1019 -812) + 49)))) then v152=v108[857 -((2466 -(1606 + 150)) + 145) ];v106[v152](v14(v106,v152 + 1 ,v108[3]));break;end end break;end end else v106[v108[2]]={};end elseif ((v109<=(7 -2)) or ((297 + 520)==351)) then if ((v109>(3 + (3 -2))) or ((2095 -(70 + 13 + 224))>=3596)) then do return;end else local v154=0;local v155;local v156;while true do if ((v154==((299 -(167 + 131)) + 0)) or ((4049 -(497 + 1083))==(1263 + 2944))) then while true do if ((4880>(1610 + 364)) and (v155==(0 -0))) then v156=v108[1 + 0 + 1 ];v106[v156]=v106[v156]();break;end end break;end if (((709 -308)==401) and (v154==(0 -0))) then local v187=0 -(0 -0) ;while true do if ((v187==(2 -1)) or (((386 + 1832) -812)>=(479 + 3249))) then v154=1 + 0 ;break;end if ((452==452) and ((445 -(245 + 200))==v187)) then v155=0;v156=nil;v187=379 -(163 + 215) ;end end end end end elseif (((1267 + 2138)<=(8173 -3705)) and (v109<=(1 + 5))) then v106[v108[2 + 0 ]]=v108[2 + 1 ];elseif (((4967 -(233 + 664))>=940) and (v109>(1487 -((4784 -3771) + 467)))) then local v167=0 -0 ;local v168;local v169;local v170;local v171;local v172;local v173;while true do if ((v167==((0 -0) + 0)) or ((1501 -(204 + 635))>884)) then v168=0 -0 ;v169=nil;v167=1 + 0 ;end if ((v167==(1 -0)) or ((1053 + 1045)==(4197 -(1546 + 7)))) then v170=nil;v171=nil;v167=8 -6 ;end if ((((8518 -5558) -(223 + 64 + 347))<=(11738 -8346)) and (v167==(6 -3))) then while true do if ((v168==(1 + 0)) or ((2531 -(1737 + 160))>=(701 + 527))) then v171=nil;v172=nil;v168=2;end if (((1072 + 2654)<=(5069 -(1008 + 75))) and (v168==(2 -0))) then v173=nil;while true do if ((v169==2) or (((2990 + 2276) -(32 + 1249))>(1475 + 3314))) then for v217=v170,v95 do local v218=0 -0 ;local v219;while true do if ((v218==(0 -(0 -0))) or ((685 + 139 + 313)>(4485 -3228))) then v219=0 -0 ;while true do if ((v219==0) or ((8216 -5073)==(4441 -(370 + 1358)))) then v173=v173 + 1 ;v106[v217]=v171[v173];break;end end break;end end end break;end if ((v169==(0 -0)) or (2365<=(2701 -(369 + (558 -351))))) then local v210=0 -0 ;local v211;while true do if (((2451 + 1168)<=(5883 -(794 + 795))) and (v210==(0 -0))) then v211=531 -(382 + 149) ;while true do if (((5289 -(1056 + 2 + 4))<=4724) and (v211==(0 + 0))) then local v229=1661 -(1576 + 85) ;while true do if (((2325 -1168)<=((3369 + 139) -2299)) and (v229==(2 -1))) then v211=812 -(746 + 65) ;break;end if (((0 + (0 -0))==v229) or ((9791 -5019)<=(2077 -(799 + 176)))) then v170=v108[237 -(179 + 56) ];v171,v172=v103(v106[v170](v14(v106,v170 + ((2124 -(460 + 1385)) -(257 + 21)) ,v108[1738 -(1417 + 318) ])));v229=2 -1 ;end end end if ((((2045 -(320 + 1299)) + (4277 -2717))>(1258 -(357 + 268))) and (v211==(1 -(0 -0)))) then v169=1413 -(133 + 1279) ;break;end end break;end end end if (((3823 -(125 + 1178))<=(2120 + 1900)) and (v169==1)) then local v212=57 -(10 + 47) ;local v213;while true do if ((v212==(0 + 0)) or ((1219 + 1230)<=(1489 + 926))) then v213=0 + 0 ;while true do if (((1079 + 3871)>(2968 -(909 + 387))) and (v213==(1784 -(1280 + 503)))) then v169=2;break;end if ((v213==0) or ((56 + 168)==(488 + 2337))) then local v230=0;while true do if ((v230==(1 + 0)) or ((3979 + 735)<=2438)) then v213=1 + 0 ;break;end if ((v230==(0 -(1414 -(481 + 933)))) or (550>=(3020 -((352 -153) + 600)))) then v95=(v172 + v170) -1 ;v173=(1640 -(793 + 847)) + 0 ;v230=1 + 0 ;end end end end break;end end end end break;end if ((v168==0) or ((2098 -(292 + 1587))>=(549 + 1681))) then local v202=0 -0 ;while true do if ((0==v202) or ((2297 + 485)<=(11158 -8821))) then v169=0 + (0 -0) ;v170=nil;v202=(3148 -(596 + 1088)) -(198 + (2414 -1149)) ;end if (((4706 -(1375 + 222))>=(1958 -801)) and (v202==(1 + 0))) then v168=1123 -(195 + 927) ;break;end end end end break;end if (((10725 -7701)>(1420 -(399 + 302 + 682))) and (v167==2)) then v172=nil;v173=nil;v167=10 -7 ;end end else local v174=(1834 -(651 + 267)) -(171 + 104 + 641) ;local v175;local v176;while true do if ((v174==0) or (((1907 -(453 + 728)) + 2577)==(836 + 630))) then v175=(118 + 311) -(228 + 201) ;v176=nil;v174=119 -(28 + 90) ;end if ((v174==1) or ((332 + 34)>(374 + 330))) then while true do if (((363 + 245)<(868 + 194 + 706)) and (v175==(0 -0))) then v176=v108[4 -2 ];v106[v176]=v106[v176](v14(v106,v176 + (4 -3) ,v95));break;end end break;end end end elseif (((1100 -726)==(147 + (428 -(194 + 7)))) and (v109<=(692 -(385 + 294)))) then if ((v109<=(364 -(313 + 41))) or (((3696 -2859) + 1809)>(4864 -(461 + 781)))) then if ((v109>9) or (566>4559)) then if ((v106[v108[(1175 + 482) -(179 + 1021 + 455) ]]==v108[5 -1 ]) or (1504>(9744 -6614))) then v94=v94 + 1 ;else v94=v108[3 + 0 + 0 ];end else for v163=v108[207 -(59 + (2098 -(546 + 1406))) ],v108[7 -4 ] do v106[v163]=nil;end end elseif ((2290>(919 + 460)) and (v109<=11)) then v106[v108[73 -(35 + 36) ]]();elseif ((265<(3738 -(209 + 855))) and (v109>((15 -11) + 8))) then local v178=0 + 0 ;local v179;local v180;local v181;while true do if ((v178==1) or ((3695 + 151)<(9040 -5467))) then v181=nil;while true do if ((v179==1) or (1733==(421 + 3112))) then while true do if ((v180==(1696 -(104 + 1592))) or ((2751 + 1747)>=(4812 + 170))) then v181=v108[(1354 -(557 + 795)) + 0 ];v106[v181]=v106[v181](v14(v106,v181 + 1 ,v108[7 -4 ]));break;end end break;end if (((406 -166)<=(5113 -(674 + 1131))) and (v179==(0 -0))) then v180=1967 -(25 + 1942) ;v181=nil;v179=1 -0 ;end end break;end if ((v178==0) or ((6833 -4277)<1479)) then v179=1786 -(8 + 1778) ;v180=nil;v178=2 -1 ;end end else v94=v108[6 -3 ];end elseif ((v109<=(32 -17)) or ((1459 + 428)>(4637 -(540 + 587 + 766)))) then if ((v109>(13 + (1235 -(1120 + 114)))) or (903>(2945 + 1616))) then v106[v108[1 + 1 ]]=v46[v108[1 + 2 + 0 ]];elseif ((v108[409 -(102 + 305) ]==v106[v108[16 -12 ]]) or ((688 + 179)>(1486 + 2247))) then v94=v94 + 1 + 0 ;else v94=v108[1389 -(774 + 612) ];end elseif ((v109<=(46 -30)) or ((5820 -(1646 + 212))<(2385 + (1973 -965)))) then v106[v108[1 + 1 ]]=v106[v108[5 -2 ]];elseif (((3029 -(106 + 666))<=((7859 + 2992) -7654)) and (v109>(79 -62))) then v106[v108[4 -2 ]]=v106[v108[8 -5 ]][v108[9 -5 ]];else v106[v108[1 + 1 ]]=v43(v101[v108[3]],nil,v46);end v94=v94 + (2 -1) ;break;end if ((484>=(1788 -(801 + 530))) and (v113==0)) then local v126=955 -(222 + 733) ;local v127;while true do if (((31 + 1156)<=(2458 -(74 + 933))) and (v126==(1133 -(91 + 1042)))) then v127=1626 -(363 + 1263) ;while true do if (((2201 + 844)>=((1739 -(184 + 759)) + 785)) and (v127==1)) then v113=1;break;end if (((2964 + 1682)==(12843 -8197)) and (v127==(1896 -(44 + 816 + 709 + 327)))) then local v136=0 -0 ;while true do if (((17 + 162)>=82) and (v136==1)) then v127=1;break;end if ((v136==0) or ((404 + (2613 -(81 + 105)))<329)) then v108=v100[v94];v109=v108[1 + 0 ];v136=1899 -(651 + 1247) ;end end end end break;end end end end break;end end break;end if ((v111==(0 -0)) or ((1693 + 1102)>4457)) then v112=0;v113=nil;v111=1 + 0 ;end end end end;v93=3;end if (v93==3) then A,B=v41(v12(v98));if  not A[1] then local v114=0;local v115;while true do if (0==v114) then v115=v44[4][v94] or "?" ;error("Script error at ["   .. v115   .. "]:"   .. A[2] );break;end end else return v14(A,2,B);end break;end if (1==v93) then v96={...};v97=v13("#",...) -1 ;v93=2;end end end;end end end return v43(v42(),{},v26)(...);end;vv10(),...);break;end end end
